name: Deploy Service

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to deploy to (main or production)'
      service_name:
        required: true
        type: string
        description: 'Name of the service to deploy'
      project_id:
        required: true
        type: string
        description: 'ID of the project to deploy to'
    secrets:
      DATABASE_URL:
        required: false
      GCP_SA_KEY:
        required: true

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ vars.GAR_HOSTNAME }}

      - name: Set image path
        run: echo "IMAGE_PATH=${{ vars.GAR_HOSTNAME }}/${{ inputs.project_id }}/shared-docker-registry/${{ inputs.service_name }}:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and Push Container
        run: |-
          docker build \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg ENVIRONMENT=${{ inputs.environment }} \
            -t ${{ env.IMAGE_PATH }} \
            -f Dockerfile .
          docker push ${{ env.IMAGE_PATH }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ inputs.service_name }}
          region: ${{ vars.REGION }}
          image: ${{ env.IMAGE_PATH }}
          flags: '--allow-unauthenticated'
          env_vars: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            ENVIRONMENT=${{ inputs.environment }}

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UrlParametersRouteImport } from './routes/url-parameters'
import { Route as ReactStateRouteImport } from './routes/react-state'
import { Route as IndexRouteImport } from './routes/index'

const UrlParametersRoute = UrlParametersRouteImport.update({
  id: '/url-parameters',
  path: '/url-parameters',
  getParentRoute: () => rootRouteImport,
} as any)
const ReactStateRoute = ReactStateRouteImport.update({
  id: '/react-state',
  path: '/react-state',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/react-state': typeof ReactStateRoute
  '/url-parameters': typeof UrlParametersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/react-state': typeof ReactStateRoute
  '/url-parameters': typeof UrlParametersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/react-state': typeof ReactStateRoute
  '/url-parameters': typeof UrlParametersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/react-state' | '/url-parameters'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/react-state' | '/url-parameters'
  id: '__root__' | '/' | '/react-state' | '/url-parameters'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReactStateRoute: typeof ReactStateRoute
  UrlParametersRoute: typeof UrlParametersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/url-parameters': {
      id: '/url-parameters'
      path: '/url-parameters'
      fullPath: '/url-parameters'
      preLoaderRoute: typeof UrlParametersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/react-state': {
      id: '/react-state'
      path: '/react-state'
      fullPath: '/react-state'
      preLoaderRoute: typeof ReactStateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReactStateRoute: ReactStateRoute,
  UrlParametersRoute: UrlParametersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
